-schema=vulnerability_scanner_api
    version = 1.0

-import
    security = "../types/security_test.l"

-api
    VulnerabilityScanner:
        ScanForXSS:
            input: {
                target: string,
                options?: {
                    vectors?: [string],
                    contexts?: [string],
                    depth?: int
                }
            }
            output: {
                vulnerabilities: [security.SecurityVulnerability],
                error?: string
            }

        ScanForCSRF:
            input: {
                target: string,
                options?: {
                    forms?: bool,
                    headers?: bool,
                    tokens?: bool
                }
            }
            output: {
                vulnerabilities: [security.SecurityVulnerability],
                error?: string
            }

        ScanForInjection:
            input: {
                target: string,
                type: string,  # SQL, Command, etc.
                options?: {
                    payloads?: [string],
                    encoding?: string
                }
            }
            output: {
                vulnerabilities: [security.SecurityVulnerability],
                error?: string
            }

        CheckConfiguration:
            input: {
                target: string,
                checks: [string]
            }
            output: {
                vulnerabilities: [security.SecurityVulnerability],
                error?: string
            }

        CheckEncryption:
            input: {
                target: string,
                options?: {
                    protocols?: [string],
                    ciphers?: [string]
                }
            }
            output: {
                vulnerabilities: [security.SecurityVulnerability],
                error?: string
            }

        FuzzEndpoint:
            input: {
                endpoint: string,
                method: string,
                options?: {
                    payloads?: [string],
                    headers?: bool,
                    parameters?: bool
                }
            }
            output: {
                vulnerabilities: [security.SecurityVulnerability],
                error?: string
            }

-rules
    ScanExecution:
        when: scan_started
        validate:
            - verify_target
            - check_permissions
            - validate_options
        actions:
            - execute_scan
            - analyze_results
            - document_findings

    PayloadGeneration:
        when: payload_needed
        validate:
            - verify_payload_type
            - check_context
            - validate_encoding
        actions:
            - generate_payload
            - encode_payload
            - validate_payload

    ResultAnalysis:
        when: scan_completed
        validate:
            - verify_findings
            - check_false_positives
            - validate_evidence
        actions:
            - classify_vulnerabilities
            - assess_risk
            - generate_recommendations
